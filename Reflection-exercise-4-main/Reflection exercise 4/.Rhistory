# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00001.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00001.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00001.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00004.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# 2. Calculate the number of respondents with doctoral degrees in each state using EDUCD
doctoral_respondents <- data %>%
filter(EDUCD == doctoral_educd_code) %>%
group_by(STATEICP) %>%
summarise(doctoral_count = sum(PERWT)) %>%
as_tibble()
# Set the correct STATEICP code for California (71)
california_state_code <- "71"
# Ensure that we have doctoral degree holders in California
california_doctoral_respondents <- doctoral_respondents %>%
filter(STATEICP == california_state_code) %>%
pull(doctoral_count)
# Debugging step: Check if california_doctoral_respondents has a valid value
print(california_doctoral_respondents)
# Check for empty result and stop if necessary
if (length(california_doctoral_respondents) == 0) {
stop("Error: No doctoral respondents found for California. Check STATEICP or dataset.")
}
# Define the total number of respondents in California
california_total_respondents <- 391171
# Calculate the ratio for California (doctoral degree holders / total respondents)
california_ratio <- california_doctoral_respondents / california_total_respondents
# 3. Use this ratio to estimate the total number of respondents in each state
state_estimates <- doctoral_respondents %>%
mutate(estimated_total_respondents = doctoral_count / california_ratio)
# 4. Merge the estimated totals with the actual totals
comparison <- state_estimates %>%
left_join(actual_respondents, by = "STATEICP") %>%
mutate(difference = estimated_total_respondents - actual_total_respondents,
percentage_error = (difference / actual_total_respondents) * 100)
# Display the comparison result in a more readable format
print(comparison)
# Results and Comparison
# Displaying the final comparison with relevant columns
comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error)
#| echo: false
#| warning: false
#| message: false
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00004.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# 2. Calculate the number of respondents with doctoral degrees in each state using EDUCD
doctoral_respondents <- data %>%
filter(EDUCD == doctoral_educd_code) %>%
group_by(STATEICP) %>%
summarise(doctoral_count = sum(PERWT)) %>%
as_tibble()
# Set the correct STATEICP code for California (71)
california_state_code <- "71"
# Ensure that we have doctoral degree holders in California
california_doctoral_respondents <- doctoral_respondents %>%
filter(STATEICP == california_state_code) %>%
pull(doctoral_count)
# Debugging step: Check if california_doctoral_respondents has a valid value
print(california_doctoral_respondents)
# Check for empty result and stop if necessary
if (length(california_doctoral_respondents) == 0) {
stop("Error: No doctoral respondents found for California. Check STATEICP or dataset.")
}
# Define the total number of respondents in California
california_total_respondents <- 391171
# Calculate the ratio for California (doctoral degree holders / total respondents)
california_ratio <- california_doctoral_respondents / california_total_respondents
# 3. Use this ratio to estimate the total number of respondents in each state
state_estimates <- doctoral_respondents %>%
mutate(estimated_total_respondents = doctoral_count / california_ratio)
# 4. Merge the estimated totals with the actual totals
comparison <- state_estimates %>%
left_join(actual_respondents, by = "STATEICP") %>%
mutate(
difference = estimated_total_respondents - actual_total_respondents,
percentage_error = (difference / actual_total_respondents) * 100,
estimated_total_respondents = round(estimated_total_respondents, 2),
difference = round(difference, 2),
percentage_error = round(percentage_error, 2)
)
#show result
print(comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error))
# Display the comparison result in a more readable format
print(comparison)
# Results and Comparison
# Displaying the final comparison with relevant columns
comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error)
#| echo: false
#| warning: false
#| message: false
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00004.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# 2. Calculate the number of respondents with doctoral degrees in each state using EDUCD
doctoral_respondents <- data %>%
filter(EDUCD == doctoral_educd_code) %>%
group_by(STATEICP) %>%
summarise(doctoral_count = sum(PERWT)) %>%
as_tibble()
# Set the correct STATEICP code for California (71)
california_state_code <- "71"
# Ensure that we have doctoral degree holders in California
california_doctoral_respondents <- doctoral_respondents %>%
filter(STATEICP == california_state_code) %>%
pull(doctoral_count)
# Debugging step: Check if california_doctoral_respondents has a valid value
print(california_doctoral_respondents)
# Check for empty result and stop if necessary
if (length(california_doctoral_respondents) == 0) {
stop("Error: No doctoral respondents found for California. Check STATEICP or dataset.")
}
# Define the total number of respondents in California
california_total_respondents <- 391171
# Calculate the ratio for California (doctoral degree holders / total respondents)
california_ratio <- california_doctoral_respondents / california_total_respondents
# 3. Use this ratio to estimate the total number of respondents in each state
state_estimates <- doctoral_respondents %>%
mutate(estimated_total_respondents = doctoral_count / california_ratio)
# 4. Merge the estimated totals with the actual totals
comparison <- state_estimates %>%
left_join(actual_respondents, by = "STATEICP") %>%
mutate(
difference = estimated_total_respondents - actual_total_respondents,
percentage_error = (difference / actual_total_respondents) * 100,
estimated_total_respondents = round(estimated_total_respondents, 0),
difference = round(difference, 0),
percentage_error = round(percentage_error, 0)
)
#show result
print(comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error))
# Display the comparison result in a more readable format
print(comparison)
# Results and Comparison
# Displaying the final comparison with relevant columns
comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error)
#| echo: false
#| warning: false
#| message: false
#| label: tbl-State-Level-Respondent-Comparison
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
# Load the dataset
data <- read_csv("usa_00004.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# 2. Calculate the number of respondents with doctoral degrees in each state using EDUCD
doctoral_respondents <- data %>%
filter(EDUCD == doctoral_educd_code) %>%
group_by(STATEICP) %>%
summarise(doctoral_count = sum(PERWT)) %>%
as_tibble()
# Set the correct STATEICP code for California (71)
california_state_code <- "71"
# Ensure that we have doctoral degree holders in California
california_doctoral_respondents <- doctoral_respondents %>%
filter(STATEICP == california_state_code) %>%
pull(doctoral_count)
# Debugging step: Check if california_doctoral_respondents has a valid value
print(california_doctoral_respondents)
# Check for empty result and stop if necessary
if (length(california_doctoral_respondents) == 0) {
stop("Error: No doctoral respondents found for California. Check STATEICP or dataset.")
}
# Define the total number of respondents in California
california_total_respondents <- 391171
# Calculate the ratio for California (doctoral degree holders / total respondents)
california_ratio <- california_doctoral_respondents / california_total_respondents
# 3. Use this ratio to estimate the total number of respondents in each state
state_estimates <- doctoral_respondents %>%
mutate(estimated_total_respondents = doctoral_count / california_ratio)
# 4. Merge the estimated totals with the actual totals
comparison <- state_estimates %>%
left_join(actual_respondents, by = "STATEICP") %>%
mutate(
difference = estimated_total_respondents - actual_total_respondents,
percentage_error = (difference / actual_total_respondents) * 100,
estimated_total_respondents = round(estimated_total_respondents, 0),
difference = round(difference, 0),
percentage_error = round(percentage_error, 0)
)
#show result
print(comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error))
# Display the comparison result in a more readable format
print(comparison)
# Results and Comparison
# Displaying the final comparison with relevant columns
comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error)
#| echo: false
#| warning: false
#| message: false
# Load necessary libraries
library(dplyr)
library(readr)
library(tibble)
library(knitr)
# Load the dataset
data <- read_csv("usa_00004.csv")
# Define the code for a doctoral degree (EDUCD = 116)
doctoral_educd_code <- 116
# 1. Calculate the actual number of respondents in each state using PERWT
actual_respondents <- data %>%
group_by(STATEICP) %>%
summarise(actual_total_respondents = sum(PERWT)) %>%
as_tibble()
# 2. Calculate the number of respondents with doctoral degrees in each state using EDUCD
doctoral_respondents <- data %>%
filter(EDUCD == doctoral_educd_code) %>%
group_by(STATEICP) %>%
summarise(doctoral_count = sum(PERWT)) %>%
as_tibble()
# Set the correct STATEICP code for California (71)
california_state_code <- "71"
# Ensure that we have doctoral degree holders in California
california_doctoral_respondents <- doctoral_respondents %>%
filter(STATEICP == california_state_code) %>%
pull(doctoral_count)
# Debugging step: Check if california_doctoral_respondents has a valid value
print(california_doctoral_respondents)
# Check for empty result and stop if necessary
if (length(california_doctoral_respondents) == 0) {
stop("Error: No doctoral respondents found for California. Check STATEICP or dataset.")
}
# Define the total number of respondents in California
california_total_respondents <- 391171
# Calculate the ratio for California (doctoral degree holders / total respondents)
california_ratio <- california_doctoral_respondents / california_total_respondents
# 3. Use this ratio to estimate the total number of respondents in each state
state_estimates <- doctoral_respondents %>%
mutate(estimated_total_respondents = doctoral_count / california_ratio)
# 4. Merge the estimated totals with the actual totals
comparison <- state_estimates %>%
left_join(actual_respondents, by = "STATEICP") %>%
mutate(
difference = estimated_total_respondents - actual_total_respondents,
percentage_error = (difference / actual_total_respondents) * 100,
estimated_total_respondents = round(estimated_total_respondents, 0),
difference = round(difference, 0),
percentage_error = round(percentage_error, 0)
)
#show result
print(comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error))
# Display the comparison result in a more readable format
print(comparison)
# Results and Comparison
# Displaying the final comparison with relevant columns
comparison %>%
select(STATEICP, doctoral_count, estimated_total_respondents, actual_total_respondents, difference, percentage_error) %>%
knitr::kable(
col.names = c(
"State Code", "Doctoral Count", "Estimated Total Respondents",
"Actual Total Respondents", "Difference", "Percentage Error"
),
caption = "Comparison of Estimated vs Actual Respondents by State"
)
